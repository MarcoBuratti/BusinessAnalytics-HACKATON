library(readr)
Guns <- read_csv("Guns.txt")
View(Guns)
data <- Guns
violent <- log(data$violent)
#sapply(violent, class)
#regressor
afam <- data$afam
library("readxl")
library(rgl)
library(kknn)
# Plot data with the log value on y axis
plot(afam, violent, xlim=c(0,15), ylim=c(3,8))
grid()
abline(0,1, lty=3)
# Fit a linear model
fm <- lm(violent ~ afam)
summary(fm)
# plot the regression line and the fitted values
abline(coefficients(fm), col='red')
points(afam, fitted(fm), col='red', pch=16)
# Create a qq-plot of the residuals
qqnorm(residuals(fm))
# Perform a Normality test of the residuals
shapiro.test(residuals(fm))
# Print the estimates of the regression coefficients
coefficients(fm)
# Compute CI of the regression coefficients
confint(fm, level= 0.95)
# Print the estimate of the error variance
s2 <- sum(residuals(fm)^2)/fm$df
sqrt(s2)
# Plot the residuals vs regressor
plot(afam, residuals(fm))
abline(h=0)
# Build a new data base
Z0   <- data.frame(afam=18)
# Compute the CI
CI <- predict(fm, Z0, interval='confidence')
# Compute a PI
PI <- predict(fm, Z0, interval='prediction', level=0.95)
# Compute a set of CIs
# Build a new data base
Z0   <- data.frame(cbind(afam=seq(0, 35, by=0.1)))
# Plot the CIs
plot(afam, violent, xlim=c(0,35), ylim=c(4,8))
lines(Z0[,1], CI[,'fit'])
lines(Z0[,1], CI[,'lwr'], lty=4)
lines(Z0[,1], CI[,'upr'], lty=4)
# Compute a set of PIs
PI <- predict(fm, Z0, interval='prediction', level=0.95)
# Plot the PIs
lines(Z0[,1], PI[,'fit'])
lines(Z0[,1], PI[,'lwr'], lty=2)
lines(Z0[,1], PI[,'upr'], lty=2)
plot(afam, violent, xlim=c(0,35), ylim=c(4,8))
lines(Z0[,1], CI[,'fit'])
lines(Z0[,1], CI[,'lwr'], lty=4)
lines(Z0[,1], CI[,'upr'], lty=4)
# Build a new data base
Z0   <- data.frame(afam=10)
# Compute the CI
CI <- predict(fm, Z0, interval='confidence')
# Compute a PI
PI <- predict(fm, Z0, interval='prediction', level=0.95)
# Compute a set of CIs
# Build a new data base
Z0   <- data.frame(cbind(afam=seq(0, 35, by=0.1)))
plot(afam, violent, xlim=c(0,35), ylim=c(4,8))
lines(Z0[,1], CI[,'fit'])
lines(Z0[,1], CI[,'lwr'], lty=4)
lines(Z0[,1], CI[,'upr'], lty=4)
PI <- predict(fm, Z0, interval='prediction', level=0.95)
# Plot the PIs
lines(Z0[,1], PI[,'fit'])
lines(Z0[,1], PI[,'lwr'], lty=2)
lines(Z0[,1], PI[,'upr'], lty=2)
# Build a new data base
Z0   <- data.frame(afam=10)
# Compute the CI
CI <- predict(fm, Z0, interval='confidence')
# Compute a PI
PI <- predict(fm, Z0, interval='prediction', level=0.95)
# Compute a set of CIs
# Build a new data base
Z0   <- data.frame(cbind(afam=seq(0, 35, by=0.1)))
# Compute the CIs
CI <- predict(fm, Z0, interval='confidence')
plot(afam, violent, xlim=c(0,35), ylim=c(4,8))
lines(Z0[,1], CI[,'fit'])
lines(Z0[,1], CI[,'lwr'], lty=4)
lines(Z0[,1], CI[,'upr'], lty=4)
PI <- predict(fm, Z0, interval='prediction', level=0.95)
# Plot the PIs
lines(Z0[,1], PI[,'fit'])
lines(Z0[,1], PI[,'lwr'], lty=2)
lines(Z0[,1], PI[,'upr'], lty=2)
Z0
Z0[,1]
PI[,'fit']
CI[,'fit']
View(Z0)
View(Z0)
Z0 <- 0
Z0 <- 0
CI <- 0
PI <- 0
# Compute the CI
CI <- predict(fm, Z0, interval='confidence')
# Compute a PI
PI <- predict(fm, Z0, interval='prediction', level=0.95)
# Compute a set of CIs
# Build a new data base
Z0   <- data.frame(cbind(afam=seq(0, 35, by=0.1)))
# Compute the CIs
CI <- predict(fm, Z0, interval='confidence')
plot(afam, violent, xlim=c(0,35), ylim=c(4,8))
lines(Z0[,1], CI[,'fit'])
lines(Z0[,1], CI[,'lwr'], lty=4)
lines(Z0[,1], CI[,'upr'], lty=4)
# Compute a set of PIs
PI <- predict(fm, Z0, interval='prediction', level=0.95)
PI <- predict(fm, Z0, interval='prediction', level=0.95)
# Plot the PIs
lines(Z0[,1], PI[,'fit'])
lines(Z0[,1], PI[,'lwr'], lty=2)
lines(Z0[,1], PI[,'upr'], lty=2)
# Import the second regressor
population <- data$population
pairs(cbind(violent, afam, population, income))
open3d()
plot3d(x=afam, y=population, z=violent, size=10, col='black')
# Add a third regressor
income <- data$income
pairs(cbind(violent, afam, population, income))
open3d()
plot3d(x=afam, y=population, z=violent, size=10, col='black')
fm2 <- lm(violent ~ afam + population)
summary(fm2)
# plot the regression surface and the fitted values
points3d(x=afam, y=population, z=fitted(fm2), size=10, col='red')
planes3d(coefficients(fm2)[2],coefficients(fm2)[3],-1,coefficients(fm2)[1], alpha=0.5, color='red')
# Plot data with the log value on y axis
plot(afam, violent, xlim=c(0,15), ylim=c(3,8))
grid()
abline(0,1, lty=3)
fm <- lm(violent ~ afam)
summary(fm)
# plot the regression line and the fitted values
abline(coefficients(fm), col='red')
predicted.response <- kknn(violent ~ afam,
train = data.frame(afam, violent),
test = Z0,
k = 20, kernel='rectangular')
# Plot the knn prediction line
lines(Z0[,'afam'], predicted.response$fitted.values, col='green')
# Select the value of k (leave-one-out crossvalidation method)
train.cv <- train.kknn(response ~ regressor1, data = data.frame(regressor1, response),
kmax = 40, scale = F, kernel = 'rectangular')
plot(train.cv)
grid()
train.cv <- train.kknn(violent ~ afam, data = data.frame(afam, violent),
kmax = 40, scale = F, kernel = 'rectangular')
plot(train.cv)
grid()
predicted.response <- kknn(violent ~ afam,
train = data.frame(afam, violent),
test = Z0,
k = 18, kernel='rectangular')
# Plot data with the log value on y axis
plot(afam, violent, xlim=c(0,15), ylim=c(3,8))
grid()
abline(0,1, lty=3)
# plot the regression line and the fitted values
abline(coefficients(fm), col='red')
# Plot the knn prediction line
lines(Z0[,'afam'], predicted.response$fitted.values, col='green')
# Plot the knn prediction line
lines(Z0[,'afam'], predicted.response$fitted.values, col='blu')
# Plot the knn prediction line
lines(Z0[,'afam'], predicted.response$fitted.values, col='blue')
train.cv <- train.kknn(violent ~ afam, data = data.frame(afam, violent),
kmax = 40, scale = F, kernel = 'rectangular')
plot(train.cv)
grid()
# Compare CV errors with the response variance
abline(h = var(violent))
# Compare CV errors with the response variance
abline(h = var(response))
# Compare CV errors with the response variance
abline(h = var(violent))
plot(population, violent, xlim=c(0,15), ylim=c(3,8))
grid()
abline(0,1, lty=3)
fm2 <- lm(violent ~ population)
summary(fm2)
abline(coefficients(fm2), col='red')
points(afam, fitted(fm2), col='red', pch=16)
abline(coefficients(fm2), col='red')
points(population, fitted(fm2), col='red', pch=16)
population <- data$population
# Plot data with the log value on y axis
plot(population, violent, xlim=c(0,15), ylim=c(3,8))
grid()
abline(0,1, lty=3)
# Fit a linear model
fm2 <- lm(violent ~ population)
summary(fm2)
# plot the regression line and the fitted values
abline(coefficients(fm2), col='red')
points(population, fitted(fm2), col='red', pch=16)
plot(income, violent, xlim=c(0,15), ylim=c(3,8))
grid()
abline(0,1, lty=3)
income
c
income <- data$income
# Plot data with the log value on y axis
plot(income, violent, xlim=c(0,15), ylim=c(9000,15000))
grid()
abline(0,1, lty=3)
# Add a third regressor
income <- data$income
plot(income, violent, xlim=c(0,15), ylim=c(9000,15000))
grid()
abline(0,1, lty=3)
income
plot(violent, income, xlim=c(0,15), ylim=c(9000,15000))
grid()
abline(0,1, lty=3)
plot(income, violent, xlim=c(9000,15000), ylim=c(3,8))
grid()
abline(0,1, lty=3)
fm3 <- lm(violent ~ income)
summary(fm3)
abline(coefficients(fm3), col='red')
points(population, fitted(fm3), col='red', pch=16)
# plot the regression line and the fitted values
abline(coefficients(fm3), col='red')
points(income, fitted(fm3), col='red', pch=16)
plot(income, violent, xlim=c(9000,17000), ylim=c(3,8))
grid()
abline(0,1, lty=3)
# Fit a linear model
fm3 <- lm(violent ~ income)
summary(fm3)
# plot the regression line and the fitted values
abline(coefficients(fm3), col='red')
points(income, fitted(fm3), col='red', pch=16)
plot(income, violent, xlim=c(9000,20000), ylim=c(3,8))
grid()
abline(0,1, lty=3)
# Fit a linear model
fm3 <- lm(violent ~ income)
summary(fm3)
# plot the regression line and the fitted values
abline(coefficients(fm3), col='red')
points(income, fitted(fm3), col='red', pch=16)
fm3 <- lm(violent ~ afam + population + income)
summary(fm3)
pairs(cbind(violent, afam, population, income))
#Import the dataset
data("Guns")
#Clean the data and transfrom certain features to log values to avoid skewness towards large values
Guns$violent <- log(Guns$violent)
Guns$murder <- NULL
Guns$robbery <-NULL
#Compute the simple linear regression for interesting variables onto the response violence (ethnicity, gender,income, living factors)
response <- Guns$violent ##Alway take into consideration that by using the log values, even small coefficients (0.5) have a significant impact
rg_cauc <- Guns$cauc
rg_afam <- Guns$afam
model_cauc <- lm(response~rg_cauc)
summary(model_cauc)
model_afam <- lm(response~rg_afam)
summary(model_afam)
rg_male <- Guns$male
model_male <- lm(response~rg_male)
summary(model_male)
#Income (log values) <- Use the normal and not the log values
rg_inc <- Guns$income
model_inc <- lm(response~rg_inc)
summary(model_inc)
# Income (normal values, as seen by the data source provider)
rg_inc2 <- Guns$income
model_inc2 <- lm(response~rg_inc2)
summary(model_inc2)
#Living factors (population and density)
rg_pop <- Guns$population
rg_den <- Guns$density
model_pop <- lm(response~rg_pop)
summary(model_pop)
model_den <- lm(response~rg_den)
summary(model_den)
plot(rg_afam, response, asp = 1)
abline(coefficients(model_afam), col='red')
points(rg_afam, fitted(model_afam), col='red', pch=16)
grid()
plot(rg_den, response, asp = 1)
abline(coefficients(model_den), col='red')
points(rg_den, fitted(model_den), col='red', pch=16)
grid()
#Additional computations for Afam
# Create a qq-plot of the residuals
qqnorm(residuals(model_afam))
# Perform a Normality test of the residuals
shapiro.test(residuals(model_afam))
# Print the estimates of the regression coefficients
coefficients(model_afam)
# Compute CI of the regression coefficients
confint(model_afam, level= 0.95)
s2 <- sum(residuals(model_afam)^2)/model_afam$df
sqrt(s2)
plot(rg_afam, residuals(model_afam))
abline(h=0)
#Additional computations for density
# Create a qq-plot of the residuals
qqnorm(residuals(model_den))
# Perform a Normality test of the residuals
shapiro.test(residuals(model_den))
# Print the estimates of the regression coefficients
coefficients(model_den)
# Compute CI of the regression coefficients
confint(model_den, level= 0.95)
s2 <- sum(residuals(model_den)^2)/model_den$df
sqrt(s2)
plot(rg_den, residuals(model_den))
abline(h=0)
model_multi1 <- lm(response~rg_afam+rg_den)
summary(model_multi1)
#Adding population as a regressor
model_multi2 <- lm(response~rg_afam+rg_den+rg_pop)
summary(model_multi2)
###Result: adj. R^2 got a l
#Try some models (reduce pop, reduce afam, add den, reduce den,...)
model_multi3 <- lm(response~rg_afam+rg_pop)
summary(model_multi3)
model_multi4 <- lm(response~rg_afam+rg_pop+rg_inc2)
summary(model_multi4)
#Add prisoners to afam and pouplation
rg_pris <- Guns$prisoners
model_multi5 <- lm(response~rg_afam+rg_pop+rg_pris)
summary(model_multi5)
#Add law to afam, population and prisoner
rg_law <- Guns$law
model_multi5 <-lm(response~rg_afam+rg_pop+rg_pris+rg_law)
summary(model_multi5)
###Result:R^2 only increased a bit
#Add all variables, except for state and year & reduce some
model_multi6 <- lm(response~rg_afam+rg_pop+rg_pris+ rg_law + rg_inc)
summary(model_multi6)
plot(response,as.numeric(rg_law)-1, asp=1)
grid()
plot()
response
plot()
model_multi6 <- lm(response~rg_afam+rg_pop+rg_pris+ rg_law + rg_inc)
summary(model_multi6)
sub_importance <- subset(Guns, select = c(violent,afam,population,prisoners,income,law))
center_scale <- function(x) {
scale(x, scale = FALSE)
}
sub_importance$violent <- center_scale(sub_importance$violent)
sub_importance$afam <- center_scale(sub_importance$afam)
sub_importance$population <- center_scale(sub_importance$population)
sub_importance$prisoners <- center_scale(sub_importance$prisoners)
sub_importance$income <- center_scale(sub_importance$income)
sub_importance$law <- center_scale(as.numeric(sub_importance$law))
log_mod <- glm(rg_law~response, family = "binomial")
summary(log_mod)
plot(response, as.numeric(rg_law)-1, xlim=c(0, 10), xlab = "Log(Violence)", ylab = "Odds of Gun-Law in place", main = "Logistic Regression Plot")
lines(seq(0, 10, by=0.1), predict(log_reg, data.frame(response=seq(0, 10, by=0.1)), type='response'), col='red')
points(response, predict(log_reg, type='response'), pch=16, col='red')
abline(h=0.5, lty=3)
#Run best fit model with scaled variables
model_multi7 <- lm(sub_importance$violent~sub_importance$afam+sub_importance$population+sub_importance$prisoners+ sub_importance$law + sub_importance$income)
summary(model_multi7)
model_multi6 <- lm(response~rg_afam+rg_pop+rg_pris+ rg_law + rg_inc)
summary(model_multi6)
sub_importance <- subset(Guns, select = c(violent,afam,population,prisoners,income,law))
center_scale <- function(x) {
scale(x, scale = FALSE)
}
sub_importance$violent <- center_scale(sub_importance$violent)
sub_importance$afam <- center_scale(sub_importance$afam)
sub_importance$population <- center_scale(sub_importance$population)
sub_importance$prisoners <- center_scale(sub_importance$prisoners)
sub_importance$income <- center_scale(sub_importance$income)
sub_importance$law <- center_scale(as.numeric(sub_importance$law))
log_mod <- glm(rg_law~response, family = "binomial")
summary(log_mod)
plot(response, as.numeric(rg_law)-1, xlim=c(0, 10), xlab = "Log(Violence)", ylab = "Odds of Gun-Law in place", main = "Logistic Regression Plot")
lines(seq(0, 10, by=0.1), predict(log_reg, data.frame(response=seq(0, 10, by=0.1)), type='response'), col='red')
points(response, predict(log_reg, type='response'), pch=16, col='red')
abline(h=0.5, lty=3)
plot(violent,as.numeric(rg_law)-1, asp=1)
grid()
#Add all variables, except for state and year & reduce some
model_multi6 <- lm(response~rg_afam+rg_pop+rg_pris+ rg_law + rg_inc)
summary(model_multi6)
sub_importance <- subset(Guns, select = c(violent,afam,population,prisoners,income,law))
#Scale everything excluding law
center_scale <- function(x) {
scale(x, scale = FALSE)
}
#Plot the logistic model
plot(response, as.numeric(rg_law)-1, xlim=c(0, 10), xlab = "Log(Violence)", ylab = "Odds of Gun-Law in place", main = "Logistic Regression Plot")
lines(seq(0, 10, by=0.1), predict(log_reg, data.frame(response=seq(0, 10, by=0.1)), type='response'), col='red')
points(response, predict(log_reg, type='response'), pch=16, col='red')
abline(h=0.5, lty=3)
plot(response, as.numeric(rg_law)-1, xlim=c(0, 10), xlab = "Log(Violence)", ylab = "Odds of Gun-Law in place", main = "Logistic Regression Plot")
lines(seq(0, 10, by=0.1), predict(violent, data.frame(response=seq(0, 10, by=0.1)), type='response'), col='red')
points(response, predict(vviolent, type='response'), pch=16, col='red')
abline(h=0.5, lty=3)
plot(response, as.numeric(rg_law)-1, xlim=c(0, 10), xlab = "Log(Violence)", ylab = "Odds of Gun-Law in place", main = "Logistic Regression Plot")
lines(seq(0, 10, by=0.1), predict(violent, data.frame(response=seq(0, 10, by=0.1)), type='response'), col='red')
points(response, predict(violent, type='response'), pch=16, col='red')
abline(h=0.5, lty=3)
model_multi7 <- lm(sub_importance$violent~sub_importance$afam+sub_importance$population+sub_importance$prisoners+ sub_importance$law + sub_importance$income)
summary(model_multi7)
